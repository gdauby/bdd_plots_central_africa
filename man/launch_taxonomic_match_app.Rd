% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/launch_taxonomic_match_app.R
\name{launch_taxonomic_match_app}
\alias{launch_taxonomic_match_app}
\title{Launch Taxonomic Name Standardization App}
\usage{
launch_taxonomic_match_app(
  data = NULL,
  name_column = NULL,
  language = c("en", "fr"),
  min_similarity = 0.3,
  max_suggestions = 10,
  mode = c("interactive", "batch"),
  launch.browser = TRUE
)
}
\arguments{
\item{data}{Optional data.frame containing taxonomic names to standardize.
If NULL, user will upload an Excel file through the app interface.}

\item{name_column}{Optional character string specifying the column name
containing taxonomic names. If NULL, user will select interactively.}

\item{language}{Character, initial interface language. Options:
- "en" (English, default)
- "fr" (French)}

\item{min_similarity}{Numeric between 0 and 1, minimum similarity threshold
for fuzzy matching. Lower values are more permissive. Default: 0.3}

\item{max_suggestions}{Integer, maximum number of fuzzy match suggestions
to show per unmatched name. Default: 10}

\item{mode}{Character, review mode for unmatched names. Options:
- "interactive" (default): Review names one-by-one
- "batch": Review all names in table view (not yet implemented)}

\item{launch.browser}{Logical, whether to launch app in browser.
Default: TRUE}
}
\value{
Invisibly returns NULL. The app runs until user closes it.
}
\description{
Launch an interactive Shiny application for standardizing taxonomic names
against the Central African plant taxonomic backbone. The app provides
automatic matching with intelligent fuzzy search, manual review capabilities,
and export functionality.
}
\details{
## Workflow

1. **Data Input**: Upload Excel file or provide R data.frame
2. **Column Selection**: Choose column containing taxonomic names
3. **Auto Matching**: Automatic matching using hierarchical strategy:
   - Exact match on full name
   - Genus-constrained fuzzy match (searches species within matched genera)
   - Full database fuzzy match (last resort)
4. **Review** (Phase 3): Manually review unmatched names with suggestions
5. **Export**: Download results in Excel, CSV, or RDS format

## Match Quality

The app uses the new `match_taxonomic_names()` function which provides:
- Intelligent genus-constrained fuzzy matching
- Similarity scoring for match quality assessment
- Synonym resolution
- Taxonomic hierarchy information

## Data Format

Input data should contain:
- One column with taxonomic names (genus + species, optionally with authors)
- Other columns with associated data (plots, measurements, etc.)

Output data includes all original columns plus:
- `idtax_n`: Matched taxon ID
- `idtax_good_n`: Accepted taxon ID (for synonyms)
- `matched_name`: Matched name from backbone
- `corrected_name`: Final standardized name
- `match_method`: How name was matched (exact, genus_constrained, fuzzy)
- `match_score`: Similarity score (0-1)
- `is_synonym`: Whether matched name is a synonym
- `accepted_name`: Accepted name if synonym
}
\examples{
\dontrun{
# Launch with file upload interface
launch_taxonomic_match_app()

# Launch with R data
my_data <- read.csv("tree_inventory.csv")
launch_taxonomic_match_app(
  data = my_data,
  name_column = "species_name"
)

# Launch in French
launch_taxonomic_match_app(language = "fr")

# More strict fuzzy matching
launch_taxonomic_match_app(min_similarity = 0.7)

# Show more suggestions per name
launch_taxonomic_match_app(max_suggestions = 20)
}

}
\seealso{
- [match_taxonomic_names()] for the underlying matching function
- [query_taxa()] for programmatic taxonomic queries
- [standardize_taxonomic_batch()] for batch processing without Shiny
}
